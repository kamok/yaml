{
  "$id": "foo",
  "$schema": "https://json-schema.org/draft-07/schema",
  "title": "RRE Build Yml",
  "description": "Validations",
  "type": "object",
  "properties": {
    "builder": {
      "type": "string",
      "enum": ["npm", "poetry"],
      "description": "Specific package manager to use"
    },
    "type": {
      "type": "string",
      "enum": [
        "library",
        "cronjob",
        "microservice",
        "grpc-microservice",
        "user-interface",
        "process"
      ],
      "description": "Artifact type to build: https://github.ibm.com/w3-rre/w3-rre/wiki/Artifact-Types"
    }
  },
  "required": ["builder", "type"],
  "allOf": [
    {
      "if": {
        "properties": {"type": {"const": "library"}},
        "required": ["type"]
      },
      "then": {
        "allOf": [{"$ref": "defs.json#/definitions/core"}],
        "properties": {
          "builder": true,
          "type": true,
          "version": true,
          "slackChannel": true,
          "productionBranches": true,
          "baseVersion": true,
          "artifactory": true,
          "ci": true
        },
        "additionalProperties": false
      }
    },
    {
      "if": {
        "properties": {"type": {"const": "cronjob"}},
        "required": ["type"]
      },
      "then": {
        "required": ["cd"],
        "allOf": [{"$ref": "defs.json#/definitions/core"}],
        "properties": {
          "cd": {
            "description": "Requires property schedule or schedules",
            "properties": {
              "couchdb": {
                "allOf": [{"$ref": "defs.json#/definitions/cd.couchdb"}]
              },
              "profile": {
                "allOf": [{"$ref": "defs.json#/definitions/cd.profile"}]
              },
              "config": {
                "allOf": [{"$ref": "defs.json#/definitions/cd.config"}]
              },
              "schedule": {
                "type": "string",
                "description": "A valid cron time, such as 0 0 * * * (every day at 12:00 AM). https://crontab.cronhub.io/"
              },
              "schedules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name of your script, try to keep it short due to character limit",
                      "pattern": "^(?!@).+"
                    },
                    "timing": {
                      "type": "string",
                      "description": "Eg: https://na.artifactory.swg-devops.com/artifactory/api/npm/chq-dwe-w3-rre-npm-local. Can not end with /. ",
                      "pattern": ".*(?<!/)$"
                    },
                    "script": {
                      "type": "string",
                      "description": "script to run, eg: foo.js or bar.sh"
                    }
                  },
                  "required": ["name", "timing", "script"]
                }
              },
              "cassandra": {
                "allOf": [{"$ref": "defs.json#/definitions/cd.cassandra"}]
              }
            },
            "oneOf": [{"required": ["schedule"]}, {"required": ["schedules"]}],
            "additionalProperties": false
          },
          "builder": true,
          "type": true,
          "version": true,
          "slackChannel": true,
          "productionBranches": true,
          "baseVersion": true,
          "artifactory": true,
          "ci": true
        },
        "additionalProperties": false
      }
    },
    {
      "if": {
        "properties": {"type": {"const": "microservice"}},
        "required": ["type"]
      },
      "then": {"allOf": [{"$ref": "defs.json#/definitions/core"}]}
    },
    {
      "if": {
        "properties": {"type": {"const": "grpc-microservice"}},
        "required": ["type"]
      },
      "then": {"allOf": [{"$ref": "defs.json#/definitions/core"}]}
    },
    {
      "if": {
        "properties": {"type": {"const": "user-interface"}},
        "required": ["type"]
      },
      "then": {"allOf": [{"$ref": "defs.json#/definitions/core"}]}
    }
  ]
}